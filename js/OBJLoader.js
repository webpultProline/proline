THREE.OBJLoader=function(){var J=/^[og]\s*(.+)?/,k=/^mtllib /,q=/^usemtl /;function K(){var t={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materialLibraries:[],startObject:function(t,e){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=t,void(this.object.fromDeclaration=!1!==e);var r=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:t||"",fromDeclaration:!1!==e,geometry:{vertices:[],normals:[],colors:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(t,e){var r=this._finalize(!1);r&&(r.inherited||r.groupCount<=0)&&this.materials.splice(r.index,1);var i={index:this.materials.length,name:t||"",mtllib:Array.isArray(e)&&0<e.length?e[e.length-1]:"",smooth:void 0!==r?r.smooth:this.smooth,groupStart:void 0!==r?r.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(t){var e={index:"number"==typeof t?t:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return e.clone=this.clone.bind(e),e}};return this.materials.push(i),i},currentMaterial:function(){if(0<this.materials.length)return this.materials[this.materials.length-1]},_finalize:function(t){var e=this.currentMaterial();if(e&&-1===e.groupEnd&&(e.groupEnd=this.geometry.vertices.length/3,e.groupCount=e.groupEnd-e.groupStart,e.inherited=!1),t&&1<this.materials.length)for(var r=this.materials.length-1;0<=r;r--)this.materials[r].groupCount<=0&&this.materials.splice(r,1);return t&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),e}},r&&r.name&&"function"==typeof r.clone){var i=r.clone(0);i.inherited=!0,this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(t,e){var r=parseInt(t,10);return 3*(0<=r?r-1:r+e/3)},parseNormalIndex:function(t,e){var r=parseInt(t,10);return 3*(0<=r?r-1:r+e/3)},parseUVIndex:function(t,e){var r=parseInt(t,10);return 2*(0<=r?r-1:r+e/2)},addVertex:function(t,e,r){var i=this.vertices,s=this.object.geometry.vertices;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addVertexPoint:function(t){var e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addVertexLine:function(t){var e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addNormal:function(t,e,r){var i=this.normals,s=this.object.geometry.normals;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addColor:function(t,e,r){var i=this.colors,s=this.object.geometry.colors;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addUV:function(t,e,r){var i=this.uvs,s=this.object.geometry.uvs;s.push(i[t+0],i[t+1]),s.push(i[e+0],i[e+1]),s.push(i[r+0],i[r+1])},addUVLine:function(t){var e=this.uvs;this.object.geometry.uvs.push(e[t+0],e[t+1])},addFace:function(t,e,r,i,s,a,n,o,h){var l=this.vertices.length,u=this.parseVertexIndex(t,l),c=this.parseVertexIndex(e,l),p=this.parseVertexIndex(r,l);if(this.addVertex(u,c,p),void 0!==i&&""!==i){var m=this.uvs.length;u=this.parseUVIndex(i,m),c=this.parseUVIndex(s,m),p=this.parseUVIndex(a,m),this.addUV(u,c,p)}if(void 0!==n&&""!==n){var f=this.normals.length;u=this.parseNormalIndex(n,f),c=n===o?u:this.parseNormalIndex(o,f),p=n===h?u:this.parseNormalIndex(h,f),this.addNormal(u,c,p)}0<this.colors.length&&this.addColor(u,c,p)},addPointGeometry:function(t){this.object.geometry.type="Points";for(var e=this.vertices.length,r=0,i=t.length;r<i;r++)this.addVertexPoint(this.parseVertexIndex(t[r],e))},addLineGeometry:function(t,e){this.object.geometry.type="Line";for(var r=this.vertices.length,i=this.uvs.length,s=0,a=t.length;s<a;s++)this.addVertexLine(this.parseVertexIndex(t[s],r));var n=0;for(a=e.length;n<a;n++)this.addUVLine(this.parseUVIndex(e[n],i))}};return t.startObject("",!1),t}function t(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager,this.materials=null}return t.prototype={constructor:t,load:function(t,e,r,i){var s=this,a=new THREE.FileLoader(s.manager);a.setPath(this.path),a.load(t,function(t){e(s.parse(t))},r,i)},setPath:function(t){return this.path=t,this},setMaterials:function(t){return this.materials=t,this},parse:function(t){console.time("OBJLoader");var e=new K;-1!==t.indexOf("\r\n")&&(t=t.replace(/\r\n/g,"\n")),-1!==t.indexOf("\\\n")&&(t=t.replace(/\\\n/g,""));for(var r=t.split("\n"),i="",s="",a=[],n="function"==typeof"".trimLeft,o=0,h=r.length;o<h;o++)if(i=r[o],0!==(i=n?i.trimLeft():i.trim()).length&&"#"!==(s=i.charAt(0)))if("v"===s){var l=i.split(/\s+/);switch(l[0]){case"v":e.vertices.push(parseFloat(l[1]),parseFloat(l[2]),parseFloat(l[3])),8===l.length&&e.colors.push(parseFloat(l[4]),parseFloat(l[5]),parseFloat(l[6]));break;case"vn":e.normals.push(parseFloat(l[1]),parseFloat(l[2]),parseFloat(l[3]));break;case"vt":e.uvs.push(parseFloat(l[1]),parseFloat(l[2]))}}else if("f"===s){for(var u=i.substr(1).trim().split(/\s+/),c=[],p=0,m=u.length;p<m;p++){var f=u[p];if(0<f.length){var d=f.split("/");c.push(d)}}var v=c[0];for(p=1,m=c.length-1;p<m;p++){var g=c[p],b=c[p+1];e.addFace(v[0],g[0],b[0],v[1],g[1],b[1],v[2],g[2],b[2])}}else if("l"===s){var E=i.substring(1).trim().split(" "),x=[],j=[];if(-1===i.indexOf("/"))x=E;else for(var y=0,L=E.length;y<L;y++){var H=E[y].split("/");""!==H[0]&&x.push(H[0]),""!==H[1]&&j.push(H[1])}e.addLineGeometry(x,j)}else if("p"===s){var R=i.substr(1).trim().split(" ");e.addPointGeometry(R)}else if(null!==(a=J.exec(i))){var T=(" "+a[0].substr(1).trim()).substr(1);e.startObject(T)}else if(q.test(i))e.object.startMaterial(i.substring(7).trim(),e.materialLibraries);else if(k.test(i))e.materialLibraries.push(i.substring(7).trim());else{if("s"!==s){if("\0"===i)continue;throw new Error('THREE.OBJLoader: Unexpected line: "'+i+'"')}if(1<(a=i.split(" ")).length){var w=a[1].trim().toLowerCase();e.object.smooth="0"!==w&&"off"!==w}else e.object.smooth=!0;(S=e.object.currentMaterial())&&(S.smooth=e.object.smooth)}e.finalize();var V=new THREE.Group;V.materialLibraries=[].concat(e.materialLibraries);for(o=0,h=e.objects.length;o<h;o++){var M=e.objects[o],F=M.geometry,I=M.materials,P="Line"===F.type,A="Points"===F.type,z=!1;if(0!==F.vertices.length){var C=new THREE.BufferGeometry;C.addAttribute("position",new THREE.Float32BufferAttribute(F.vertices,3)),0<F.normals.length?C.addAttribute("normal",new THREE.Float32BufferAttribute(F.normals,3)):C.computeVertexNormals(),0<F.colors.length&&(z=!0,C.addAttribute("color",new THREE.Float32BufferAttribute(F.colors,3))),0<F.uvs.length&&C.addAttribute("uv",new THREE.Float32BufferAttribute(F.uvs,2));for(var B,U=[],O=0,N=I.length;O<N;O++){var G=I[O],S=void 0;if(null!==this.materials)if(S=this.materials.create(G.name),!P||!S||S instanceof THREE.LineBasicMaterial){if(A&&S&&!(S instanceof THREE.PointsMaterial)){var _=new THREE.PointsMaterial({size:10,sizeAttenuation:!1});D.copy(S),S=_}}else{var D=new THREE.LineBasicMaterial;D.copy(S),D.lights=!1,S=D}S||((S=P?new THREE.LineBasicMaterial:A?new THREE.PointsMaterial({size:1,sizeAttenuation:!1}):new THREE.MeshPhongMaterial).name=G.name),S.flatShading=!G.smooth,S.vertexColors=z?THREE.VertexColors:THREE.NoColors,U.push(S)}if(1<U.length){for(O=0,N=I.length;O<N;O++){G=I[O];C.addGroup(G.groupStart,G.groupCount,O)}B=P?new THREE.LineSegments(C,U):A?new THREE.Points(C,U):new THREE.Mesh(C,U)}else B=P?new THREE.LineSegments(C,U[0]):A?new THREE.Points(C,U[0]):new THREE.Mesh(C,U[0]);B.name=M.name,V.add(B)}}return V}},t}();